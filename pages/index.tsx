import DefaultLayout from '@/components/layouts/default/DefaultLayout';
import { GetStaticProps, InferGetStaticPropsType } from 'next';
import Image from 'next/future/image';
import Head from 'next/head';
import Link from 'next/link';
import { IPokemon } from 'types/pokemon';
import { NextPageWithLayout } from './page';

const Home: NextPageWithLayout = ({
  pokemons,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  // const { data, error } = useGetPokemons();
  // const pokemons = data ? data.results : [];

  // if (error) return <h1>Something went wrong!</h1>;
  // if (!pokemons) return <h1>Loading...</h1>;

  return (
    <>
      <Head>
        <title>Nextjs - Pokedex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1 className="text-3xl font-bold underline">Pokemon</h1>
      <h2 className="text-2xl font-bold">Pokedex</h2>
      <div className="container">
        <div className="grid grid-cols-2 md:grid-cols-4 xl:grid-cols-5">
          {pokemons.map((pokemon: IPokemon, index: number) => (
            <Link
              href={`/pokemon/${index + 1}`}
              key={pokemon.name}
              className="max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700"
            >
              <a>
                <Image
                  src={pokemon.image}
                  alt="Picture of the Pokemon"
                  width={500}
                  height={500}
                />
                <div className="p-5">
                  <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                    {pokemon.name}
                  </h5>
                </div>
              </a>
            </Link>
          ))}
        </div>
      </div>
    </>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=100"`);
  const { results } = await response.json();

  const pokemons = results.map((pokemon: IPokemon[], index: number) => {
    const paddedId = ('00' + (index + 1)).slice(-3);
    const image = `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${paddedId}.png`;
    return { ...pokemon, image };
  });

  return {
    props: { pokemons },
  };
};

Home.getLayout = (page) => {
  return <DefaultLayout>{page}</DefaultLayout>;
};
